{"version":3,"sources":["js/constants/action-types.js","js/reducers/index.js","js/middleware/index.js","js/store/index.js","js/components/Form.js","js/actions/index.js","js/components/home.js","js/components/List.js","js/components/articles.js","js/Auth/auth.js","js/components/premiumArticles.js","js/components/navbar.js","js/components/loginPage.js","js/Auth/privateRoute.js","js/components/app.js","index.js"],"names":["ADD_ARTICLE","initialState","articles","rootReducer","state","action","type","Object","assign","concat","payload","forbiddenWords","store","createStore","applyMiddleware","dispatch","next","filter","word","title","includes","length","ConnectedForm","props","handleChange","bind","handleSubmit","event","this","setState","target","id","value","preventDefault","addArticle","onSubmit","htmlFor","onChange","Component","Form","connect","article","Home","List","map","el","index","Articles","auth","isAuthenticated","logIn","cb","logOut","premiumArticles","onClick","history","push","Navbar","to","localStorage","setItem","LoginPage","getItem","PrivateRoute","component","rest","render","pathname","from","location","App","exact","path","document","getElementById"],"mappings":"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","file":"static/js/main.17400bca.chunk.js","sourcesContent":["export const ADD_ARTICLE = \"ADD_ARTICLE\";","import { ADD_ARTICLE } from \"../constants/action-types\";\n\nconst initialState = {\n    articles: []\n};\n\nfunction rootReducer(state= initialState, action){\n    if(action.type === ADD_ARTICLE ){\n        return Object.assign({},state,{\n            articles: state.articles.concat(action.payload)\n        });\n    }\n    return state;\n}\n\nexport default rootReducer;","import { ADD_ARTICLE } from \"../constants/action-types\";\n\nconst forbiddenWords = [\"spam\",\"money\"];\n\nexport const forbiddenWordsMiddleware = ({dispatch}) => {\n    return function (next){\n        return function (action){\n            if (action.type === ADD_ARTICLE){\n                const foundWord = forbiddenWords.filter(word => action.payload.title.includes(word));\n\n                if (foundWord.length){\n                    return dispatch({ type: \"Found Bad Words\" });\n                }\n            }\n            return next(action);\n        };\n    };\n}","import { createStore , applyMiddleware } from \"redux\";\nimport rootReducer from \"../reducers/index\";\nimport { forbiddenWordsMiddleware } from \"../middleware/index\";\n\nconst store = createStore(rootReducer, applyMiddleware(forbiddenWordsMiddleware));\n\nexport default store;","import React, { Component } from \"react\";\nimport { connect } from \"react-redux\";\nimport {addArticle} from \"../actions/index\";\n\n//mapDispatchToProps connects Redux actions to React props.\n//This way a connected React component will be able to send messages to the store.\n\nfunction mapDispatchToProps(dispatch){\n    return{\n        addArticle: article => dispatch(addArticle(article))\n    };\n}\n\nclass ConnectedForm extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            title:\"\"\n        };\n        this.handleChange = this.handleChange.bind(this);\n        this.handleSubmit = this.handleSubmit.bind(this);\n    }\n    handleChange(event) {\n        this.setState({[event.target.id]: event.target.value});\n    }\n\n    handleSubmit(event){\n        event.preventDefault();\n        const {title} = this.state;\n        this.props.addArticle({title});\n        this.setState({title:\" \"});\n    }\n    render() {\n        const {title} = this.state;\n        return(\n            <form onSubmit={this.handleSubmit}>\n                <div>\n                    <label htmlFor=\"title\">Title</label>\n                    <input\n                        type=\"text\"\n                        id=\"title\"\n                        value={title}\n                        onChange={this.handleChange}\n                    />\n                </div>\n                <button type=\"submit\">Save</button>\n            </form>\n        );\n    }\n}\n\nconst Form = connect(\n    null,\n    mapDispatchToProps)(ConnectedForm);\n\nexport default Form;","import { ADD_ARTICLE } from \"../constants/action-types\";\n\nexport function addArticle (payload) {\n    return { type: ADD_ARTICLE ,payload };\n}","import React from \"react\"\nimport Form from \"./Form\";\n\nconst Home = () => {\n    return(\n      <div>\n          <h1>Home</h1>\n          <h2>Add a new Article</h2>\n          <Form/>\n      </div>\n    );\n}\n\nexport default Home;\n","import React from \"react\";\nimport { connect } from \"react-redux\";\n\n// mapStateToProps:  it connects a part of the Redux state to the props of a React component.\n// By doing so a connected React component will have access to the exact part of the store it needs.\n\nconst mapStateToProps = (state) => {\n    return { articles: state.articles };\n};\n\nconst connectedList = ({ articles }) => (\n    <ul>\n        {articles.map( (el,index) => (\n            <li key={index}> {el.title} </li>\n        ))}\n    </ul>\n);\n\nconst List = connect(mapStateToProps)(connectedList);\n\nexport default List;","import React from \"react\";\nimport List from \"./List\";\n\nconst Articles = () => {\n    return(\n      <div>\n          <h2>All Articles</h2>\n          <List/>\n      </div>\n    );\n}\n\nexport default Articles;\n","const auth = {\n    isAuthenticated: false,\n    logIn(cb){\n        auth.isAuthenticated = true;\n        cb();\n    },\n    logOut(cb){\n        auth.isAuthenticated = false;\n        cb();\n    }\n};\n\nexport default auth;","import React from \"react\"\nimport auth from \"../Auth/auth\";\n\nconst premiumArticles = (props) => {\n    return (\n      <div>\n          <h1>Premium Articles</h1>\n          <ul>\n              <li>Premium</li>\n          </ul>\n          <button onClick={() =>{\n              auth.logOut(() => {\n                  props.history.push();\n              })\n          }} > Log Out</button>\n      </div>\n    );\n}\n\nexport default premiumArticles;\n","import React from \"react\";\nimport {Link} from \"react-router-dom\";\n\nconst Navbar = () => {\n    return(\n        <div>\n            <nav>\n                <ul>\n                    <li>\n                        <Link to=\"/\">Home</Link>\n                    </li>\n                    <li>\n                        <Link to=\"/allArticles\">All Articles</Link>\n                    </li>\n                    <li>\n                        <Link to=\"/premiumArticles\"> Premium Articles </Link>\n                    </li>\n                </ul>\n            </nav>\n        </div>\n    );\n}\n\nexport default Navbar;","import React, {useState} from 'react';\nimport auth from \"../Auth/auth\";\nimport {Redirect} from \"react-router-dom\";\n\nlocalStorage.setItem(\"name\", \"siam\");\nlocalStorage.setItem(\"password\", \"12345\");\n\nconst LoginPage = (props) => {\n\n    return(\n      <div>\n          <h3>You must log in to view Premium Articles</h3>\n          <form onSubmit={() =>{\n              auth.logIn(() => { props.history.push(\"/premiumArticles\");\n              });\n          }}>\n              <label htmlFor=\"name\">Name</label>\n              <input type=\"text\" id=\"name\" value={localStorage.getItem(\"name\")} />\n              <label htmlFor=\"password\">Password</label>\n              <input type=\"number\" value={localStorage.getItem(\"password\")}/>\n              <button type=\"submit\">Login</button>\n          </form>\n      </div>\n    );\n}\n\n\nexport default LoginPage;\n\n/**\n * const initialForm = {name:\"\",password:\"\"};\n const [user,setUser] = useState(initialForm);\n const handleInputChange = (event) => {\n        const {name,value} = event.target;\n        setUser({...user , [name]:value});\n    }\n return(\n <div>\n <h3>You must log in to view Premium Articles {user.name}</h3>\n <form onSubmit={() =>{\n              if(user.name === localStorage.getItem(\"name\")){\n                  auth.logIn(() => { props.history.push(\"/premiumArticles\");\n                  });\n              } else{\n                    return (\n                        <Redirect to={{\n                            pathname: \"/login\",\n                            state:{\n                                from: props.location\n                            }\n                        }}/>\n                    );\n              }\n          }}>\n <label htmlFor=\"name\">Name</label>\n <input type=\"text\" id=\"name\" placeholder=\"type Your Name\" onChange={handleInputChange}/>\n <label htmlFor=\"password\">Password</label>\n <input type=\"number\" placeholder=\"type Your Password\" onChange={handleInputChange}/>\n <button type=\"submit\">Login</button>\n </form>\n </div>\n ); **/","import React from \"react\";\nimport auth from \"./auth\";\nimport {Route , Redirect} from \"react-router-dom\";\n\nconst PrivateRoute = ({component:Component , ...rest}) => {\n    return(\n      <Route {...rest} render={props => {\n        if(auth.isAuthenticated === true){\n            return <Component {...props}/>\n        } else {\n            return (\n                <Redirect to={{\n                    pathname: \"/login\",\n                    state:{\n                        from: props.location\n                    }\n                }}/>\n            );\n        }\n      }}\n      />\n    );\n}\n\nexport default PrivateRoute;","import React from \"react\";\nimport Home from \"./home\";\nimport Articles from \"./articles\";\nimport premiumArticles from \"./premiumArticles\";\nimport Navbar from \"./navbar\";\nimport LoginPage from \"./loginPage\";\nimport PrivateRoute from \"../Auth/privateRoute\";\nimport {  Route, Switch } from \"react-router-dom\";\n\nconst App = () => (\n    <>\n        <main>\n            <Navbar/>\n            <Switch>\n                <Route exact path=\"/\" component={Home}/>\n                <Route path=\"/allArticles\" component={Articles}/>\n                <Route path=\"/login\" component={LoginPage}/>\n                <PrivateRoute path=\"/premiumArticles\" component={premiumArticles}/>\n                <Route path=\"*\" component={() => \"404 NOT FOUND\"} />\n            </Switch>\n        </main>\n    </>\n)\n\nexport default App;\n\n","import React from 'react';\nimport { render } from \"react-dom\";\nimport { Provider } from \"react-redux\";\nimport store from \"./js/store/index\";\nimport App from \"./js/components/app\";\n//import index from \"./js/index\";\nimport { BrowserRouter, Route, Switch } from \"react-router-dom\";\n\nrender(\n    <BrowserRouter>\n        <Provider store={store}>\n            <App/>\n        </Provider>\n    </BrowserRouter>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\n"],"sourceRoot":""}